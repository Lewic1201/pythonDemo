<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sc.hoperun.mapper.ClientLink2Mapper">

    <resultMap id="ClientLink2" type="com.sc.hoperun.entity.ClientLink2">
        <result column="id" jdbcType="VARCHAR" property="clientId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="level" jdbcType="INTEGER" property="level"/>

    </resultMap>

    <select id="listClientLink2" resultMap="ClientLink2">
        SELECT
        id,
        user_name,
        password,
        create_time,
        level
        FROM
        client_link2
        ORDER BY
        id
        <if test="page!=null">
            limit #{page.startRow,jdbcType=INTEGER},#{page.pageSize,jdbcType=INTEGER}
        </if>
    </select>

    <select id="getClientLink2" resultMap="ClientLink2">
        SELECT
        id,
        user_name,
        password,
        create_time,
        level
        FROM
        client_link2
        where 1=1
        <if test="clientId!=null and clientId!=''">
            AND id=#{clientId,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="getClientLink2Count" resultType="java.lang.Integer">
        SELECT count(id)
        FROM client_link2
    </select>

    <insert id="insertClientLink2" parameterType="com.sc.hoperun.entity.ClientLink2">
        INSERT INTO client_link2 (rule_name,
                                 description)
        VALUES (#{userName,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP},
                #{level,jdbcType=INTEGER})
    </insert>

    <update id="updateClientLink2" parameterType="com.sc.hoperun.entity.ClientLink2">
        UPDATE client_link2
        SET user_name = #{userName,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            level = #{level,jdbcType=INTEGER}
        WHERE id = #{clientId,jdbcType=VARCHAR}
    </update>

    <delete id="deleteClientLink2" parameterType="java.lang.String">
        DELETE
        FROM client_link2
        WHERE id = #{clientId,jdbcType=VARCHAR}
    </delete>
</mapper>